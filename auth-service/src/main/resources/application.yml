# Main Application Configuration
spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/auth_db}
    username: ${SPRING_DATASOURCE_USERNAME:admin}
    password: ${SPRING_DATASOURCE_PASSWORD:admin}
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
  
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.PostgreSQLDialect}
        format_sql: ${HIBERNATE_FORMAT_SQL:false}
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${AUTH_GOOGLE_CLIENT_ID:}
            client-secret: ${AUTH_GOOGLE_CLIENT_SECRET:}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/oauth2/authorization/google/callback"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

server:
  port: ${SERVER_PORT:8081}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:auth-service}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP_ADDRESS:true}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:always}

logging:
  level:
    com.daking.auth: ${LOG_LEVEL_APP:INFO}
    org.springframework.security: ${LOG_LEVEL_SECURITY:INFO}
    org.springframework.security.oauth2: ${LOG_LEVEL_OAUTH2:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_HIBERNATE:INFO}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_HIBERNATE_BINDER:INFO}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    org.springframework.boot.actuator: ${LOG_LEVEL_ACTUATOR:INFO}
    org.springframework.boot.autoconfigure: ${LOG_LEVEL_AUTOCONFIG:INFO}
    org.springframework.context: ${LOG_LEVEL_CONTEXT:INFO}
    org.springframework.cloud.netflix.eureka: ${LOG_LEVEL_EUREKA:INFO}
    root: ${LOG_LEVEL_ROOT:INFO}

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://frontend:80}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
    max-age: ${CORS_MAX_AGE:3600}

jwt:
  secret: ${JWT_SECRET:default-secret-key}
  expiration: ${JWT_EXPIRATION:86400000}

spring:
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

  mail:
    host: ${SMTP_HOST:localhost}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    debug: ${MAIL_DEBUG:false} 