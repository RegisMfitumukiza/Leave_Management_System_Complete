# Docker Profile Configuration
spring:
  jpa:
    show-sql: false
    hibernate:
      format_sql: false
      ddl-auto: update
  mail:
    debug: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${AUTH_GOOGLE_CLIENT_ID:}
            client-secret: ${AUTH_GOOGLE_CLIENT_SECRET:}
            scope:
              - email
              - profile
            redirect-uri: "{baseUrl}/oauth2/authorization/google/callback"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

logging:
  level:
    com.daking.auth: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
    org.springframework.web: INFO
    root: INFO

management:
  endpoint:
    health:
      show-details: always

# Docker-specific settings
eureka:
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME:auth-service}
    prefer-ip-address: true

# Docker environment settings
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://frontend:80} 