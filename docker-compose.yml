version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: leave-management-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_DATABASE: ${DB_NAME:-leave_management}
      MYSQL_USER: ${DB_USERNAME:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - leave-management-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: leave-management-eureka
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8761
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=eureka-server
    networks:
      - leave-management-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Authentication Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: leave-management-auth
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${DB_NAME:-leave_management}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-root}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-password}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=auth-service
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    networks:
      - leave-management-network
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Leave Management Service
  leave-service:
    build:
      context: ./leave-service
      dockerfile: Dockerfile
    container_name: leave-management-leave
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${DB_NAME:-leave_management}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=${DB_USERNAME:-root}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-password}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_INSTANCE_HOSTNAME=leave-service
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - AUTH_SERVICE_URL=http://auth-service:8081
    volumes:
      - leave_uploads:/app/uploads
    networks:
      - leave-management-network
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./leavefrontend
      dockerfile: Dockerfile
    container_name: leave-management-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_AUTH_SERVICE_URL=http://localhost:8081
      - REACT_APP_LEAVE_SERVICE_URL=http://localhost:8082
    networks:
      - leave-management-network
    depends_on:
      - auth-service
      - leave-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: leave-management-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - leave-management-network
    depends_on:
      - frontend
      - auth-service
      - leave-service
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  leave_uploads:
    driver: local

networks:
  leave-management-network:
    driver: bridge 